{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/ProjectCalendar/Frontend/src/Components/FormRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Registration.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../Actions';\nimport paths from '../Routes/paths';\n\nconst FormRegister = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      target: {\n        children: {\n          password: {\n            value: password\n          },\n          confirmPassword: {\n            value: confirmPassword\n          },\n          name: {\n            value: name\n          },\n          email: {\n            value: email\n          }\n        }\n      }\n    } = event;\n\n    if (password === confirmPassword) {\n      dispatch(addUser(name, email, password));\n      history.push(paths.calendar);\n    }\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"Name\",\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"E-mail address\",\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        name: \"confirmPassword\",\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormRegister, \"RG/01JkfrQS74s+81S0IMkYZnJ0=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = FormRegister;\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["/home/user/ProjectCalendar/Frontend/src/Components/FormRegister.js"],"names":["React","useState","useHistory","useDispatch","addUser","paths","FormRegister","history","dispatch","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onSubmit","e","preventDefault","target","children","value","event","push","calendar","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Registration.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../Actions';\nimport paths from '../Routes/paths';\n\nconst FormRegister = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const {\n            target: {\n                children: {\n                    password: {\n                        value: password },\n                    confirmPassword: {\n                        value: confirmPassword },\n                    name: {\n                        value: name },\n                    email: {\n                        value: email },\n                }\n            }\n        } = event;\n\n        if (password === confirmPassword) {\n            dispatch(addUser(name, email, password));\n            history.push(paths.calendar);\n        }\n    }\n\n    const onChange = (event) => {\n        const {\n            target: { name, value } } = event;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break\n            case 'email':\n                setEmail(value);\n                break\n            case 'password':\n                setPassword(value);\n                break\n            case 'confirmPassword':\n                setConfirmPassword(value);\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input onChange={onChange} type=\"text\" placeholder=\"Name\" name=\"name\" value={name} />\n                <input onChange={onChange} type=\"text\" placeholder=\"E-mail address\" name=\"email\" value={email} />\n                <input onChange={onChange} type=\"password\" placeholder=\"Password\" name=\"password\" value={password} />\n                <input onChange={onChange} type=\"password\" placeholder=\"Confirm password\" name=\"confirmPassword\" value={confirmPassword} />\n                <button type='submit'>Sign up </button>\n            </form>\n        </div>\n    )\n}\n\nexport default FormRegister;\n"]},"metadata":{},"sourceType":"module"}