{"ast":null,"code":"import { saveToken, getToken } from '../utils/utils';\nexport const addUser = (name, email, password) => async dispatch => {\n  try {\n    const response = await fetch('http://localhost:1133/user/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const body = await response.json();\n    const {\n      data: {\n        token\n      }\n    } = body;\n    saveToken(token);\n    dispatch({\n      type: 'ADD_USERS_SUCCESS',\n      payload: {\n        name\n      }\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: 'ADD_USERS_ERROR',\n      payload: {\n        error\n      }\n    });\n  }\n};\nexport const verifyUser = (email, password) => async dispatch => {\n  try {\n    const response = await fetch('http://localhost:1133/user/authenticate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const body = await response.json();\n    console.log(body);\n    const {\n      data: {\n        token\n      }\n    } = body;\n    saveToken(token);\n    dispatch({\n      type: 'LOGIN_USERS_SUCCESS'\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addUserEvent = (startDate, endDate, event) => async dispatch => {\n  try {\n    const start = new Date(startDate).getTime();\n    const end = new Date(endDate).getTime();\n    let inputStartDate = Number(start);\n    let inputEndDate = Number(end);\n    console.log(inputEndDate);\n    const token = getToken();\n    const response = await fetch('http://localhost:1133/event/addevent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        inputStartDate,\n        inputEndDate,\n        event\n      })\n    });\n    const body = await response.json();\n    console.log(body);\n    dispatch({\n      type: 'SEND_EVENT'\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/user/ProjectCalendar/Frontend/src/Actions/index.js"],"names":["saveToken","getToken","addUser","name","email","password","dispatch","response","fetch","method","headers","body","JSON","stringify","json","data","token","type","payload","error","console","verifyUser","log","addUserEvent","startDate","endDate","event","start","Date","getTime","end","inputStartDate","Number","inputEndDate"],"mappings":"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","sourcesContent":["import { saveToken, getToken } from '../utils/utils'\n\n\nexport const addUser = (name, email, password) => async (dispatch) => {\n  try {\n    const response = await fetch('http://localhost:1133/user/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({ name, email, password })\n    })\n    const body = await response.json()\n  \n    const { data: { token } } = body\n    saveToken(token)\n\n    dispatch({\n      type: 'ADD_USERS_SUCCESS',\n      payload: { name }\n    })\n\n  } catch (error) {\n    console.error(error)\n    dispatch({\n      type: 'ADD_USERS_ERROR',\n      payload: { error }\n    })\n  }\n\n\n}\n\nexport const verifyUser = (email , password) => async (dispatch) => {\n\n  try {\n\n    const response = await fetch('http://localhost:1133/user/authenticate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({email, password })\n    })\n    const body = await response.json()\n\n    console.log(body)\n\n    const { data: { token } } = body\n    saveToken(token)\n\n    dispatch({\n      type: 'LOGIN_USERS_SUCCESS'\n    })\n  } catch (error) {\n    console.log(error)\n  }\n} \n\nexport const addUserEvent = (startDate,endDate,event) => async (dispatch) => {\n  try {\n\n    const start = new Date(startDate).getTime()\n    const end = new Date(endDate).getTime()\n    let inputStartDate = Number(start)\n    let inputEndDate = Number(end)\n    console.log(inputEndDate)\n    const token = getToken()\n    const response = await fetch('http://localhost:1133/event/addevent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({inputStartDate,inputEndDate,event})\n    })\n    const body = await response.json()\n    console.log(body)\n    dispatch({\n      type: 'SEND_EVENT',\n    })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}