[{"/home/user/ProjectCalendar/Frontend/src/index.js":"1","/home/user/ProjectCalendar/Frontend/src/App.js":"2","/home/user/ProjectCalendar/Frontend/src/Routes/Main.js":"3","/home/user/ProjectCalendar/Frontend/src/Components/FormLogin.js":"4","/home/user/ProjectCalendar/Frontend/src/Pages/Calendar.js":"5","/home/user/ProjectCalendar/Frontend/src/Pages/RegistrationPage.js":"6","/home/user/ProjectCalendar/Frontend/src/Components/FormRegister.js":"7","/home/user/ProjectCalendar/Frontend/src/Store/store.js":"8","/home/user/ProjectCalendar/Frontend/src/Reducers/index.js":"9","/home/user/ProjectCalendar/Frontend/src/Reducers/users.js":"10","/home/user/ProjectCalendar/Frontend/src/Actions/index.js":"11","/home/user/ProjectCalendar/Frontend/src/utils/utils.js":"12","/home/user/ProjectCalendar/Frontend/src/Routes/paths.js":"13","/home/user/ProjectCalendar/Frontend/src/Components/Header/Header.js":"14","/home/user/ProjectCalendar/Frontend/src/Pages/LoginPage.js":"15","/home/user/ProjectCalendar/Frontend/src/Routes/ProtectedRoute.js":"16","/home/user/ProjectCalendar/Frontend/src/Components/Loading.js":"17","/home/user/ProjectCalendar/Frontend/src/Components/Calendar/Calendar.js":"18","/home/user/ProjectCalendar/Frontend/src/Components/Calendar/BuiltCalendar.js":"19","/home/user/ProjectCalendar/Frontend/src/Components/Calendar/Popup.js":"20","/home/user/ProjectCalendar/Frontend/src/Reducers/events.js":"21"},{"size":458,"mtime":1608883293127,"results":"22","hashOfConfig":"23"},{"size":149,"mtime":1608825236212,"results":"24","hashOfConfig":"23"},{"size":741,"mtime":1609254656665,"results":"25","hashOfConfig":"23"},{"size":1422,"mtime":1611149717823,"results":"26","hashOfConfig":"23"},{"size":240,"mtime":1610363130199,"results":"27","hashOfConfig":"23"},{"size":392,"mtime":1609165511037,"results":"28","hashOfConfig":"23"},{"size":2388,"mtime":1611149717823,"results":"29","hashOfConfig":"23"},{"size":435,"mtime":1608883441172,"results":"30","hashOfConfig":"23"},{"size":154,"mtime":1610696734881,"results":"31","hashOfConfig":"23"},{"size":604,"mtime":1611149048602,"results":"32","hashOfConfig":"23"},{"size":1958,"mtime":1611149717823,"results":"33","hashOfConfig":"23"},{"size":231,"mtime":1608894839978,"results":"34","hashOfConfig":"23"},{"size":101,"mtime":1608895723307,"results":"35","hashOfConfig":"23"},{"size":591,"mtime":1609166960177,"results":"36","hashOfConfig":"23"},{"size":426,"mtime":1610696734877,"results":"37","hashOfConfig":"23"},{"size":1556,"mtime":1609254949585,"results":"38","hashOfConfig":"23"},{"size":254,"mtime":1609254410005,"results":"39","hashOfConfig":"23"},{"size":3280,"mtime":1611149717823,"results":"40","hashOfConfig":"23"},{"size":427,"mtime":1610696734877,"results":"41","hashOfConfig":"23"},{"size":1958,"mtime":1611149717823,"results":"42","hashOfConfig":"23"},{"size":383,"mtime":1611149717823,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1d4et89",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/user/ProjectCalendar/Frontend/src/index.js",[],["92","93"],"/home/user/ProjectCalendar/Frontend/src/App.js",[],"/home/user/ProjectCalendar/Frontend/src/Routes/Main.js",["94","95"],"import React , {useEffect} from 'react'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport Calendar from '../Pages/Calendar'\nimport LoginPage from '../Pages/LoginPage'\nimport RegistrationPage from '../Pages/RegistrationPage'\nimport paths from './paths'\nimport ProtectedRoute from './ProtectedRoute';\n\n\nfunction Main() {\n \n    const { login, registration, calendar } = paths\n    return (\n        <main>     \n            <Switch>\n                \n                <Route  path={login} component={LoginPage} />\n                <Route path={registration} component={RegistrationPage} />\n                <ProtectedRoute path={calendar} component={Calendar} />\n            </Switch>\n        </main>\n    )\n}\n\nexport default Main\n","/home/user/ProjectCalendar/Frontend/src/Components/FormLogin.js",[],"/home/user/ProjectCalendar/Frontend/src/Pages/Calendar.js",[],"/home/user/ProjectCalendar/Frontend/src/Pages/RegistrationPage.js",[],"/home/user/ProjectCalendar/Frontend/src/Components/FormRegister.js",["96"],"import React, { useState } from 'react';\nimport './Registration.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../Actions';\nimport paths from '../Routes/paths';\n\nconst FormRegister = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const {\n            target: {\n                children: {\n                    password: {\n                        value: password },\n                    confirmPassword: {\n                        value: confirmPassword },\n                    name: {\n                        value: name },\n                    email: {\n                        value: email },\n                }\n            }\n        } = event;\n\n        if (password === confirmPassword) {\n            dispatch(addUser(name, email, password));\n            history.push(paths.calendar);\n        }\n    }\n\n    const onChange = (event) => {\n        const {\n            target: {\n                name, value }\n        } = event;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break\n            case 'email':\n                setEmail(value);\n                break\n            case 'password':\n                setPassword(value);\n                break\n            case 'confirmPassword':\n                setConfirmPassword(value);\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input onChange={onChange} type=\"text\" placeholder=\"Name\" name=\"name\" value={name} />\n                <input onChange={onChange} type=\"text\" placeholder=\"E-mail address\" name=\"email\" value={email} />\n                <input onChange={onChange} type=\"password\" placeholder=\"Password\" name=\"password\" value={password} />\n                <input onChange={onChange} type=\"password\" placeholder=\"Confirm password\" name=\"confirmPassword\" value={confirmPassword} />\n                <button type='submit'>Sign up </button>\n            </form>\n        </div>)\n}\n\nexport default FormRegister;\n","/home/user/ProjectCalendar/Frontend/src/Store/store.js",[],"/home/user/ProjectCalendar/Frontend/src/Reducers/index.js",[],"/home/user/ProjectCalendar/Frontend/src/Reducers/users.js",[],"/home/user/ProjectCalendar/Frontend/src/Actions/index.js",["97"],"import { saveToken, getToken } from '../utils/utils'\n\n\nexport const addUser = (name, email, password) => async (dispatch) => {\n  try {\n    const response = await fetch('http://localhost:1133/user/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({ name, email, password })\n    })\n    const body = await response.json()\n  \n    const { data: { token } } = body\n    saveToken(token)\n\n    dispatch({\n      type: 'ADD_USERS_SUCCESS',\n      payload: { name }\n    })\n\n  } catch (error) {\n    console.error(error)\n    dispatch({\n      type: 'ADD_USERS_ERROR',\n      payload: { error }\n    })\n  }\n\n\n}\n\nexport const verifyUser = (email , password) => async (dispatch) => {\n\n  try {\n\n    const response = await fetch('http://localhost:1133/user/authenticate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({email, password })\n    })\n    const body = await response.json()\n\n    console.log(body)\n\n    const { data: { token } } = body\n    saveToken(token)\n\n    dispatch({\n      type: 'LOGIN_USERS_SUCCESS'\n    })\n  } catch (error) {\n    console.log(error)\n  }\n} \n\nexport const addUserEvent = (startDate,endDate,event) => async (dispatch) => {\n  try {\n\n    const start = new Date(startDate).getTime()\n    const end = new Date(endDate).getTime()\n    let inputStartDate = Number(start)\n    let inputEndDate = Number(end)\n    console.log(inputEndDate)\n    const token = getToken()\n    const response = await fetch('http://localhost:1133/event/addevent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({inputStartDate,inputEndDate,event})\n    })\n    const body = await response.json()\n    console.log(body)\n    dispatch({\n      type: 'SEND_EVENT',\n    })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n","/home/user/ProjectCalendar/Frontend/src/utils/utils.js",[],"/home/user/ProjectCalendar/Frontend/src/Routes/paths.js",["98"],"export default {\n    login : '/login',\n    registration: '/registration',\n    calendar: '/calendar'\n}","/home/user/ProjectCalendar/Frontend/src/Components/Header/Header.js",[],"/home/user/ProjectCalendar/Frontend/src/Pages/LoginPage.js",[],"/home/user/ProjectCalendar/Frontend/src/Routes/ProtectedRoute.js",["99","100","101","102"],"import React, {useEffect, useState, useMemo} from 'react'\n\nimport paths from './paths'\nimport { useHistory } from \"react-router-dom\";\n\nimport Loading from '../Components/Loading'\n\n\n\nconst verifyToken = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:1133/user/verify', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({ token })\n        })\n        const body = await response.json()\n        console.log(body.auth)\n        return body.auth\n    } catch (e) {\n        console.log(e)\n        return false\n    }\n\n}\n\nconst ProtectedRoute = (props) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\n    const history = useHistory();\n    useEffect(() => {\n        const test1 = async() =>{\n            const result = await verifyToken();\n            setIsAuthenticated(result);\n        }\n        test1();\n    }, [])\n    const { login, registration, calendar } = paths\n    const getRenderData = useMemo(() => {\n        if(isAuthenticated === null){\n            return <div><Loading></Loading></div>\n        }\n        if(isAuthenticated){\n            const Component = props.component;\n            return <Component/>\n        } else {\n            history.push(paths.login)\n            return null\n        }\n    }, [isAuthenticated])\n    console.log('isAuthenticated',isAuthenticated)\n    return getRenderData;\n}\n\nexport default ProtectedRoute\n\n","/home/user/ProjectCalendar/Frontend/src/Components/Loading.js",[],"/home/user/ProjectCalendar/Frontend/src/Components/Calendar/Calendar.js",[],"/home/user/ProjectCalendar/Frontend/src/Components/Calendar/BuiltCalendar.js",[],"/home/user/ProjectCalendar/Frontend/src/Components/Calendar/Popup.js",[],"/home/user/ProjectCalendar/Frontend/src/Reducers/events.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"111","line":2,"column":25,"nodeType":"109","messageId":"110","endLine":2,"endColumn":38},{"ruleId":"112","severity":2,"message":"113","line":32,"column":13,"nodeType":"109","messageId":"114","endLine":32,"endColumn":18},{"ruleId":"107","severity":1,"message":"115","line":68,"column":11,"nodeType":"109","messageId":"110","endLine":68,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":1,"column":1,"nodeType":"118","endLine":5,"endColumn":2},{"ruleId":"107","severity":1,"message":"119","line":40,"column":13,"nodeType":"109","messageId":"110","endLine":40,"endColumn":18},{"ruleId":"107","severity":1,"message":"120","line":40,"column":20,"nodeType":"109","messageId":"110","endLine":40,"endColumn":32},{"ruleId":"107","severity":1,"message":"121","line":40,"column":34,"nodeType":"109","messageId":"110","endLine":40,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":52,"column":8,"nodeType":"124","endLine":52,"endColumn":25,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-restricted-globals","Unexpected use of 'event'.","defaultMessage","'token' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'login' is assigned a value but never used.","'registration' is assigned a value but never used.","'calendar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'history' and 'props.component'. Either include them or remove the dependency array.","ArrayExpression",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [history, isAuthenticated, props.component]",{"range":"131","text":"132"},[1426,1443],"[history, isAuthenticated, props.component]"]